#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Name: 马江岩
# ID: 2000012707
#
# I did not use loop unrolling or ternary search tree. Instead,
# I modified the ``iaddq`` instruction such that it has different
# behaviours with different intermediate values as input.
#
# ``iaddq $-2022, %rdx`` adds 0 to %rdx on the pipe simulator
# and -2022 on the ISA simulator. I use this to determine
# which simulator my code is running on. If my code is running
# on the ISA simulator, a slow but compatible programme will
# be executed to ensure correctness; otherwise, the modified
# programme with magical ``iaddq`` instruction will be executed
# to achieve low CPE.
#
# For detailed information about the modified ``iaddq``,
# please refer to pipe-full.hcl. 
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	iaddq $-2022, %rdx  # magic number
	jge Loop            # running with pipeline simulator && len >= 0
	iaddq $2022, %rdx   # add back
	andq %rdx,%rdx		# len > 0?
	jmp test		    # if so, goto loop
loop:
    mrmovq (%rdi), %r10	# read val from src...
    iaddq $8, %rdi      # src++
	rmmovq %r10, (%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle npos		    # if so, goto npos:
    iaddq $1, %rax      # count++
npos:
    iaddq $8, %rsi      # dst++
    iaddq $-1, %rdx     # len--
test:
	jg loop			    # if len > 0, goto loop
	jmp Done            # else, goto Done

Loop:
    iaddq $2, %rcx      # move (src) to %r10, i++
    iaddq $3, %rax      # move %r10 to (dst), count++ if 0 < R[%r10] < 300

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
